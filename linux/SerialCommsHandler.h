/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class bitparallel_communication_SerialCommsHandler */

#ifndef _Included_bitparallel_communication_SerialCommsHandler
#define _Included_bitparallel_communication_SerialCommsHandler
#ifdef __cplusplus
extern "C" {
#endif
#undef bitparallel_communication_SerialCommsHandler_RX_BUFFER_SIZE
#define bitparallel_communication_SerialCommsHandler_RX_BUFFER_SIZE 4096L
#undef bitparallel_communication_SerialCommsHandler_RX_SELECT_TIMEOUT_US
#define bitparallel_communication_SerialCommsHandler_RX_SELECT_TIMEOUT_US 100000L
/*
 * Class:     bitparallel_communication_SerialCommsHandler
 * Method:    nativeStart
 * Signature: (Ljava/lang/String;I)J
 */
JNIEXPORT jlong JNICALL Java_bitparallel_communication_SerialCommsHandler_nativeStart
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     bitparallel_communication_SerialCommsHandler
 * Method:    nativeTransmit
 * Signature: ([BLjava/lang/String;J)V
 */
JNIEXPORT void JNICALL Java_bitparallel_communication_SerialCommsHandler_nativeTransmit
  (JNIEnv *, jobject, jbyteArray, jstring, jlong);

/*
 * Class:     bitparallel_communication_SerialCommsHandler
 * Method:    nativeStop
 * Signature: (Ljava/lang/String;J)V
 */
JNIEXPORT void JNICALL Java_bitparallel_communication_SerialCommsHandler_nativeStop
  (JNIEnv *, jobject, jstring, jlong);

/*
 * Class:     bitparallel_communication_SerialCommsHandler
 * Method:    nativeRxRead
 * Signature: (Ljava/nio/ByteBuffer;Ljava/lang/String;J)V
 */
JNIEXPORT void JNICALL Java_bitparallel_communication_SerialCommsHandler_nativeRxRead
  (JNIEnv *, jobject, jobject, jstring, jlong);

#ifdef __cplusplus
}
#endif
#endif
